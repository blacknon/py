#!/usr/bin/env bats

com=./py

@test "pattern" {
  result=$(seq 10 | $com 'F1%2==0' | xargs )
  [ "$result" == '2 4 6 8 10' ]
}

@test "list mode" {
  result=$(echo 1 2 3 a b c | $com '[ F2, F3*3, F5+"aaa"]')
  [ "$result" = "2 9 baaa" ]
}

@test "pattern and list mode" {
  result=$(seq 4 | $com 'F1%2==0:[F1, ":even"]' | xargs)
  [ "$result" = "2 :even 4 :even" ]
}

@test "module import" {
  result=$( echo 3.141592 | $com -m "import math" '[round(math.sin(F1/4),3)]' )
  [ "$result" = "0.707" ]
}

@test "action" {
  result=$( seq 10 | $com '{print(F1,end="")}' )
  [ "$result" = "12345678910" ]
}

@test "pattern and action" {
  result=$( seq 10 | $com 'F1%2==0:{F1= str(F1)+" " ; print(F1,end="")}' )
  [ "$result" = "2 4 6 8 10 " ]
}

@test "spaces after the colon" {
  result=$( seq 10 | $com 'F1%2==0:    {F1= str(F1)+" " ; print(F1,end="")}' )
  [ "$result" = "2 4 6 8 10 " ]
}

@test "multiple pattern" {
  result=$( seq 10 | $com 'F1%2==0;F1%2==1' | xargs )
  [ "$result" = "1 2 3 4 5 6 7 8 9 10" ]
}

@test "multiple lists" {
  result=$( seq 2 | $com '[F1];[F1]' | xargs )
  [ "$result" = "1 1 2 2" ]
}

@test "multiple actions" {
  result=$( seq 2 | $com '{print(F1)};{print(F1)}' | xargs )
  [ "$result" = "1 1 2 2" ]
}

@test "multiple pattern/lists" {
  result=$( seq 2 | $com 'F1%2==0:[F1, ":even"];F1%2==1:[F1, ":odd"]' | xargs)
  [ "$result" = "1 :odd 2 :even" ]
}

@test "multiple pattern/actions" {
  result=$( seq 2 | $com 'F1%2==0:{ print(F1, ":even") } ;F1%2==1:{ print(F1, ":odd")}' |xargs)
  [ "$result" = "1 :odd 2 :even" ]
}

@test "begin pattern" {
  result=$( seq 2 | $com 'B:{a="hoge"};F1%2==1:{ print(F1, a)}' |xargs)
  [ "$result" = "1 hoge" ]
}

@test "end pattern" {
  result=$( seq 2 | $com 'B:{a=0};{a+=F1};END:{print(a)}' )
  [ "$result" = "3" ]
}

@test "close stdin" {
  result=$( $com 'B:{print(1+1)}' )
  [ "$result" = "2" ]
}

@test "list at begin" {
  result=$( $com 'B:[1+1]' )
  [ "$result" = "2" ]
}

@test "list at end" {
  result=$( seq 2 | $com 'B:{a=0};{a+=F1};END:[a]' )
  [ "$result" = "3" ]
}


@test "space" {
  result=$( seq 2 | $com 'B:{a=0}; {a+=F1}; END:[a]' )
  [ "$result" = "3" ]
}


